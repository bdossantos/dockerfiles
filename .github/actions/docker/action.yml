name: "Build and publish to Docker registry"
description: "Pushes built artifacts to Docker"

inputs:
  dockerfile:
    description: "Absolute path to Dockerfile"
    required: true
  registry_password:
    description: "Password for image registry"
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: bdossantos
        password: ${{ inputs.registry_password }}

    - name: Extract Dockefile build context, image name and tags
      shell: bash
      id: context
      run: |
        version=$(egrep ' VERSION=(.*)$' '${{ inputs.dockerfile }}' | sed 's/^.*=//')
        vcs_ref=$(git rev-parse --short HEAD)
        image_name=$(cd $(dirname ${{ inputs.dockerfile }}) && echo "${PWD##*/}")
        tags=bdossantos/${image_name}:latest,bdossantos/${image_name}:${version},bdossantos/${image_name}:${version}-${vcs_ref},bdossantos/${image_name}:${version%.*}
        cache_image=bdossantos/${image_name}:buildcache
        echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT
        echo "cache_image=${cache_image}" >> $GITHUB_OUTPUT
        echo "path=$(dirname ${{ inputs.dockerfile }})" >> $GITHUB_OUTPUT
        echo "tags=${tags}" >> $GITHUB_OUTPUT
        echo "vcs_ref=${vcs_ref}" >> $GITHUB_OUTPUT

    - name: Build and push docker image
      uses: docker/build-push-action@v6
      with:
        build-args: |
          BUILD_DATE=${{ steps.context.outputs.build_date }}
          VCS_REF=${{ steps.context.outputs.vcs_ref }}
        cache-from: type=registry,ref=${{ steps.context.outputs.cache_image }}
        cache-to: type=registry,ref=${{ steps.context.outputs.cache_image }},mode=max
        context: ${{ steps.context.outputs.path }}
        file: ${{ inputs.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.context.outputs.tags }}
