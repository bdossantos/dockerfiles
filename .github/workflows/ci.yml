---
name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - uses: actions/cache@v2.1.5
        id: cache-pip
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/cache@v2.1.5
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - uses: actions/cache@v2.1.5
        id: cache-vendor
        with:
          path: vendor
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-ansible.yml') }}
          restore-keys: |
            ${{ runner.os }}-vendor-
      - uses: actions/cache@v2.1.5
        id: cache-shellcheck
        with:
          path: bin/shellcheck
          key: ${{ runner.os }}-shellcheck-${{ hashFiles('.github/workflows/ci.yml') }}
          restore-keys: |
            ${{ runner.os }}-shellcheck-
      - uses: actions/cache@v2.1.5
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Setup bin directories
        run: |
          mkdir -p "$(pwd)/bin"
          export PATH=$(pwd)/bin:$PATH
      - name: Get shellcheck binary
        if: steps.cache-shellcheck.outputs.cache-hit != 'true'
        run: |
          export SHELLCHECK_VERSION=v0.7.1
          wget -qO- https://github.com/koalaman/shellcheck/releases/download/${SHELLCHECK_VERSION}/shellcheck-${SHELLCHECK_VERSION}.linux.x86_64.tar.xz | tar -xJv
          mv "shellcheck-${SHELLCHECK_VERSION}/shellcheck" "$(pwd)/bin/shellcheck"
          chmod +x "$(pwd)/bin/shellcheck"
      - name: Install dependencies
        run: |
          make install
      - name: build
        run: |
          docker system prune --all --force --volumes
          docker-compose pull
          make docker-build
      - name: Lint and test
        run: |
          # FIXME
          exit 0
          make test
